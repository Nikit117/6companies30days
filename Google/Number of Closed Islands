class Solution {
public:
    int closedIsland(vector<vector<int>>& grid) {
        
        vector<vector<bool>>vis(grid.size(),vector<bool>(grid[0].size(),false));
        int ans=0;
        
        for(int i=0; i<grid.size(); i++){
            for(int j=0; j<grid[0].size(); j++){
                
                if(grid[i][j]==0 && vis[i][j]==false){
                    bool check = true;
                    
                    dfs(grid,vis,i,j,check);
                    if(check==true)
                        ans++;
                }
            }
        }
        
        return ans;
    }
    
    void dfs(vector<vector<int>>&grid,vector<vector<bool>>&vis,int row,int col,bool &check){
        if(row<0 || col<0 || row==grid.size() || col==grid[0].size() || grid[row][col]==1 || vis[row][col]==true){
            return;
        }
        
        if((row==0 || row==grid.size()-1 || col==0 || col==grid[0].size()-1) && grid[row][col]==0)
            check = false;
        
        vis[row][col] = true;
        dfs(grid,vis,row-1,col,check);
        dfs(grid,vis,row+1,col,check);
        
        dfs(grid,vis,row,col-1,check);
        dfs(grid,vis,row,col+1,check);
        
    }
};
