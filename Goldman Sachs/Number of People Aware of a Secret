class Solution {
public:
    int peopleAwareOfSecret(int n, int delay, int forget) {
        
        int mod = 1000000007;
        unordered_map<long long int, long long int> tell;
        unordered_map<long long int, long long int> forg;
        
        tell[1+delay] = 1;
        forg[1+forget] = 1;
        
        long long int curr_spread = 0; 
        long long int ans = 0;
        for(int i = 1 + delay; i <= n; ++ i){
			
            curr_spread += tell[i] % mod; 
            curr_spread -= forg[i] % mod; 
			
            tell[i + delay] += curr_spread; 
            forg[i + forget] += curr_spread;  
        }
        unordered_map<long long int,long long int> :: iterator itr;
     
        for(itr=forg.begin(); itr!=forg.end(); itr++){
            if(itr->first > n)
                ans+=itr->second;
        }

        return ans % mod;
    }
};
